{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\FINKI Angel\\\\VI Semestar\\\\IS\\\\Project\\\\PrioritiZe\\\\frontend\\\\src\\\\components\\\\Project\\\\Project.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { createAPIEndpoint, ENDPOINTS } from \"../../api/axios\";\nimport \"./Project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Project = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState({});\n  useEffect(() => {\n    createAPIEndpoint(ENDPOINTS.projects).fetchById(id).then(res => {\n      setProject(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  const getTaskStatusColor = status => {\n    switch (status) {\n      case 'Pending':\n        return 'red';\n      case 'InProgress':\n        return 'yellow';\n      case 'Completed':\n        return 'green';\n      default:\n        return 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date Started: \", project.dateStarted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Members:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: project.projectMembers && project.projectMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: member.profilePictureSrc,\n          alt: member.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), member.userName]\n      }, member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: project.tasks && project.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          backgroundColor: getTaskStatusColor(task.status)\n        },\n        children: task.description\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"AS/glXBYArVrQUPTEyPIBS5nkIQ=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useParams","useEffect","useState","createAPIEndpoint","ENDPOINTS","jsxDEV","_jsxDEV","Project","props","_s","id","project","setProject","projects","fetchById","then","res","data","console","log","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","getTaskStatusColor","status","className","title","dateStarted","projectMembers","map","member","src","profilePictureSrc","alt","userName","tasks","task","style","backgroundColor","description","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/FINKI Angel/VI Semestar/IS/Project/PrioritiZe/frontend/src/components/Project/Project.js"],"sourcesContent":["import {useParams} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {createAPIEndpoint, ENDPOINTS} from \"../../api/axios\";\r\nimport \"./Project.css\"\r\n\r\nexport const Project = (props) => {\r\n    const { id } = useParams();\r\n    const [project, setProject] = useState({});\r\n\r\n    useEffect(() => {\r\n        createAPIEndpoint(ENDPOINTS.projects).fetchById(id)\r\n            .then(res => {\r\n                setProject(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    },[id])\r\n\r\n    if (!project) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const getTaskStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'Pending':\r\n                return 'red';\r\n            case 'InProgress':\r\n                return 'yellow';\r\n            case 'Completed':\r\n                return 'green';\r\n            default:\r\n                return 'white';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"project-view\">\r\n            <h2>{project.title}</h2>\r\n            <p>Date Started: {project.dateStarted}</p>\r\n\r\n            <h3>Project Members:</h3>\r\n            <ul>\r\n                {project.projectMembers && project.projectMembers.map((member) => (\r\n                    <li key={member.id}>\r\n                        <img src={member.profilePictureSrc} alt={member.userName} />\r\n                        {member.userName}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h3>Tasks:</h3>\r\n            <ul>\r\n                {project.tasks && project.tasks.map((task) => (\r\n                    <li\r\n                        key={task.id}\r\n                        style={{\r\n                            backgroundColor: getTaskStatusColor(task.status),\r\n                        }}\r\n                    >\r\n                        {task.description}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button>Add Task</button>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}